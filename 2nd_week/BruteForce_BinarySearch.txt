완전탐색/이분탐색

* 탐색: 많은 데이터 속에서 원하는 데이터를 찾는 것

1. 완전탐색 Brute Force
    - 가능한 모든 경우의 수를 다 구해서 값을 찾는 것
    - 결과값이 확실하지만 가장 비효율적인 탐색방법

    1) 구현방법
        - 반복문 활용
            def solution(trump):
                for i in range(len(trump)):
                    if trump[i] == 8:
                        return i
                return -1

        - 재귀함수: 무한 루프 유의
            def solution(trump, loc):
                if trump[loc] == 8:
                    return loc
                else:
                    return solution(trump, loc+1)

2. 이분탐색
    - 오름차순으로 정렬된 리스트에서에서 특정한 값의 위치를 찾는 알고리즘
    - 배열 중간의 임의의 값을 선택하여 찾고자 하는 값 x와 비교, x가 중간값보다 작으면 중간 값을 기준으로 좌측, 크면 우측을 대상으로 재탐색
    - 가장 작은 인덱스 = left, 가장 큰 인덱스 = right, mid = (left+right)/2 의 조정으로 문제 풀이

    - 예시코드
        def solution(trump):
            # 함수 시작 시 left, right 선언하여 인덱스 값 지정
            left = 0
            right = len(trump)-1
            while left <= right:
                mid = (left+right)//2
                if trump[mid] ==8:
                    return mid
                elif trump[mid] < 8:
                    left = mid + 1
                elif trump[mid] > 8:
                    right = mid - 1
            return mid

